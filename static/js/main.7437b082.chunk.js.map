{"version":3,"sources":["components/App/App.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","Redux/contact-actions.js","Redux/contact-reducer.js","Redux/store.js","components/Container/Container.js","Redux/contact-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/App/App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","nanoid","deleteContact","changeFilter","items","createReducer","actions","state","find","contact","toLowerCase","alert","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","Container","children","className","styles","container","defaultProps","getContacts","getFilter","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","resetForm","onSubmit","event","preventDefault","style","form","label","type","value","onChange","currentTarget","input","pattern","title","required","button","Filter","e","target","ContactList","allContacts","normalizedFilter","includes","getVisibleContact","div","map","onClick","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.7437b082.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1JeTA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__34m1B\",\"input\":\"Filter_input__zM5LX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__ro31H\"};","import { createAction } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\n// import types from './contact-types';\n\nexport const addContact = createAction('contact/add', (name, number) => {\n  return {\n    payload: {\n      id: nanoid(5),\n      name: name,\n      number: number,\n    },\n  };\n});\n\nexport const deleteContact = createAction('contact/delete');\n\nexport const changeFilter = createAction('contact/changeFilter');\n\n// export const addContact = (text, number) => ({\n//   type: types.ADD,\n//   payload: {\n//     id: nanoid(),\n//     name: text,\n//     phone: number,\n//   },\n// });\n\n// export const deleteContact = contactId => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\n// export const changeFilter = value => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n// import types from './contact-types';\nimport * as actions from './contact-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => {\n    if (state.find(contact => contact.name.toLowerCase() === payload.name.toLowerCase())) {\n      alert(`${payload.name} is already in contacts`);\n      return state;\n    }\n    return [payload, ...state];\n  },\n\n  [actions.deleteContact]: (state, { payload }) => state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case actions.changeFilter:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactReducer from './contact-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import PropTypes from 'prop-types';\nimport styles from '../Container/Container.module.css';\n\nconst Container = ({ children }) => <div className={styles.container}>{children}</div>;\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../Redux/contact-selectors';\nimport { addContact } from '../../Redux/contact-actions';\nimport style from '../ContactForm/ContactForm.module.css';\n\nfunction ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    resetForm();\n    if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(addContact(name, number));\n    setName('');\n    setNumber('');\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={style.form}>\n      <label className={style.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          className={style.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeNumber}\n          className={style.input}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <div>\n        <button type=\"submit\" className={style.button}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../Redux/contact-selectors';\nimport { changeFilter } from '../../Redux/contact-actions';\nimport style from '../Filter/Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={style.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        className={style.input}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../Redux/contact-actions';\nimport style from '../ContactList/ContactList.module.css';\n\nconst ContactList = () => {\n  const getVisibleContact = (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return allContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n  const contacts = useSelector(({ contacts: { items, filter } }) =>\n    getVisibleContact(items, filter),\n  );\n\n  const dispatch = useDispatch();\n  return (\n    <div className={style.div}>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={style.items}>\n            {name}:<span className={style.number}>{number}</span>\n            <button\n              className={style.button}\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import Container from '../Container/Container';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport style from '../App/App.module.css';\n\nfunction App() {\n  return (\n    <Container>\n      <h2 className={style.title}>Phone book</h2>\n      <ContactForm />\n      <h2 className={style.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './Redux/store';\nimport App from './components/App/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './components/App/App.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__y74Re\",\"button\":\"ContactForm_button__2hSn_\",\"input\":\"ContactForm_input__2vSai\",\"label\":\"ContactForm_label__3QS5r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"ContactList_div__8-H73\",\"items\":\"ContactList_items__2qHdT\",\"number\":\"ContactList_number__3OGhq\",\"button\":\"ContactList_button__b2Uw1\"};"],"sourceRoot":""}