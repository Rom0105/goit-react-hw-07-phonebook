{"version":3,"sources":["components/App/App.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","Redux/contact-slice.js","Redux/contact-reducer.js","Redux/filter/ContactFilterActions.js","Redux/filter/ContactFilterReducer.js","Redux/store.js","components/Container/Container.js","Redux/filter/ContactFilterSelectors.js","Redux/contact-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/App/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","addContact","contact","post","deleteContact","contactId","delete","id","items","createReducer","fulfilled","_","payload","state","filter","loading","pending","rejected","changeFilter","createAction","middleware","getDefaultMiddleware","rootReducer","combineReducers","store","configureStore","reducer","contacts","devTools","process","Container","children","className","styles","container","defaultProps","getFilter","getContacts","getvisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChangeName","currentTarget","value","resetForm","onSubmit","event","preventDefault","alert","some","phone","style","form","label","type","onChange","input","pattern","title","required","button","Filter","filterValue","target","ContactList","visibleContacts","div","map","onClick","onDeleteContact","App","isLoading","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9dd2f83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1JeTA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"ContactList_div__8-H73\",\"items\":\"ContactList_items__2qHdT\",\"number\":\"ContactList_number__3OGhq\",\"button\":\"ContactList_button__b2Uw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__34m1B\",\"input\":\"Filter_input__zM5LX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__ro31H\"};","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://619796975953f10017d23e40.mockapi.io/api/v1';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async () => {\r\n    const { data } = await axios.get('/contacts');\r\n    return data;\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async contact => {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    return data;\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async contactId => {\r\n    const {\r\n      data: { id },\r\n    } = await axios.delete(`/contacts/${contactId}`);\r\n\r\n    return id;\r\n  },\r\n);\r\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport { fetchContacts, addContact, deleteContact } from './contact-slice';\n\nexport const items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport const loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { changeFilter } from './ContactFilterActions';\r\n\r\nexport const filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { items, loading } from './contact-reducer';\nimport { filter } from './filter/ContactFilterReducer';\n// import { contactApi } from './contactsApi';\n// import { setupListeners } from '@reduxjs/toolkit/dist/query';\nconst middleware = [...getDefaultMiddleware()];\n\nconst rootReducer = combineReducers({\n  items,\n  filter,\n  loading,\n});\n\nexport const store = configureStore({\n  reducer: {\n    contacts: rootReducer,\n    // [contactApi.reducerPath]: contactApi.reducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n  // middleware: getDefaultMiddleware => [\n  //   ...getDefaultMiddleware(),\n  //   contactApi.middleware,\n  // ],\n});\n\n// setupListeners(store.dispatch);\n","import PropTypes from 'prop-types';\nimport styles from '../Container/Container.module.css';\n\nconst Container = ({ children }) => <div className={styles.container}>{children}</div>;\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","export const getFilter = state => state.contacts.filter;\r\n","import { createSelector } from 'reselect';\nimport { getFilter } from './filter/ContactFilterSelectors';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getvisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../Redux/contact-selectors';\nimport { addContact } from '../../Redux/contact-slice';\nimport style from '../ContactForm/ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChangeName = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (name === '' && number === '') {\n      return alert(`${name} is already in contacts`);\n    }\n    contacts.some(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.phone === number,\n    )\n      ? alert(`${name} is already in contacts.`)\n      : dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={style.form}>\n      <label className={style.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          className={style.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeName}\n          className={style.input}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <div>\n        <button type=\"submit\" className={style.button}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../Redux/filter/ContactFilterSelectors';\nimport { changeFilter } from '../../Redux/filter/ContactFilterActions';\nimport style from '../Filter/Filter.module.css';\n\nconst Filter = () => {\n  const filterValue = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = ({ target: { value } }) => dispatch(changeFilter(value));\n\n  return (\n    <label className={style.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        onChange={onChange}\n        className={style.input}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz deCastelmore d'Artagnan и т. п.\"\n        required\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../Redux/contact-slice';\nimport { getvisibleContacts } from '../../Redux/contact-selectors';\nimport style from '../ContactList/ContactList.module.css';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(getvisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(deleteContact(id));\n  return (\n    <div className={style.div}>\n      <ul>\n        {visibleContacts.map(({ id, name, phone }) => (\n          <li key={id} className={style.items}>\n            {name}:<span className={style.number}>{phone}</span>\n            <button\n              className={style.button}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from '../../Redux/contact-slice';\nimport Container from '../Container/Container';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\n// import { ContactsPage } from '../ContactList/ContactsList';\n// import { CreateContact } from '../ContactForm/CreateContact';\nimport style from '../App/App.module.css';\n\nfunction App() {\n  const isLoading = useSelector(state => state.contacts.loading);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h2 className={style.title}>Phone book</h2>\n      <ContactForm />\n\n      {/* <CreateContact /> */}\n      <h2 className={style.title}>Contacts</h2>\n      {/* <ContactsPage /> */}\n      <Filter />\n      {isLoading && <h2 className={style.title}>Loading...</h2>}\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './Redux/store';\nimport App from './components/App/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './components/App/App.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__y74Re\",\"button\":\"ContactForm_button__2hSn_\",\"input\":\"ContactForm_input__2vSai\",\"label\":\"ContactForm_label__3QS5r\"};"],"sourceRoot":""}